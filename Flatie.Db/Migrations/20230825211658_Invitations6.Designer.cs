// <auto-generated />
using System;
using Flatie.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Flatie.Db.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230825211658_Invitations6")]
    partial class Invitations6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Flatie.Db.Entities.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("InvitedByUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("InvitedByUserId");

                    b.ToTable("Guest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(908),
                            End = new DateTime(2023, 8, 28, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(911),
                            HomeSpaceId = 1,
                            InvitedByUserId = 1,
                            Name = "Guest 1",
                            Start = new DateTime(2023, 8, 26, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(910)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(913),
                            End = new DateTime(2023, 8, 29, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(914),
                            HomeSpaceId = 1,
                            InvitedByUserId = 2,
                            Name = "Guest 2",
                            Start = new DateTime(2023, 8, 27, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(913)
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HomeSpace");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(672),
                            Name = "Living Room"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(675),
                            Name = "Kitchen"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(676),
                            Name = "Bedroom"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("HomeSpaceMemberRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("HomeSpaceMemberRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("HomeSpaceMembers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(865),
                            HomeSpaceId = 1,
                            HomeSpaceMemberRoleId = 1,
                            JoinedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(866),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(868),
                            HomeSpaceId = 1,
                            HomeSpaceMemberRoleId = 2,
                            JoinedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(869),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(869),
                            HomeSpaceId = 2,
                            HomeSpaceMemberRoleId = 3,
                            JoinedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(870),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(871),
                            HomeSpaceId = 3,
                            HomeSpaceMemberRoleId = 3,
                            JoinedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(871),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMemberRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HomeSpaceMemberRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(851),
                            Role = "Owner"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(853),
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(854),
                            Role = "Member"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpacePreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("UserId");

                    b.ToTable("HomeSpacePreference");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(888),
                            Description = "Preference 1 description",
                            HomeSpaceId = 1,
                            Title = "Preference 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(892),
                            Description = "Preference 2 description",
                            HomeSpaceId = 1,
                            Title = "Preference 2",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("RecipientUserId")
                        .HasColumnType("integer");

                    b.Property<int>("SenderUserId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("RecipientUserId");

                    b.HasIndex("SenderUserId");

                    b.ToTable("Invitation");
                });

            modelBuilder.Entity("Flatie.Db.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NotificationTypeId")
                        .HasColumnType("integer");

                    b.Property<bool>("Read")
                        .HasColumnType("boolean");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(691),
                            HomeSpaceId = 1,
                            Message = "Notification 1",
                            NotificationTypeId = 1,
                            Read = false,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(696),
                            HomeSpaceId = 1,
                            Message = "Notification 2",
                            NotificationTypeId = 2,
                            Read = true,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NotificationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(929),
                            TypeName = "Important"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(931),
                            TypeName = "Regular"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int?>("QuietHourImportanceId")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("QuietHourImportanceId");

                    b.HasIndex("UserId");

                    b.ToTable("QuietHour");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(778),
                            End = new DateTime(2023, 8, 25, 23, 16, 58, 428, DateTimeKind.Utc).AddTicks(779),
                            HomeSpaceId = 1,
                            QuietHourImportanceId = 1,
                            Reason = "Study time",
                            Start = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(779),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(786),
                            End = new DateTime(2023, 8, 27, 23, 16, 58, 428, DateTimeKind.Utc).AddTicks(787),
                            HomeSpaceId = 1,
                            QuietHourImportanceId = 2,
                            Reason = "Quiet reading",
                            Start = new DateTime(2023, 8, 27, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(786),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHourImportance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("QuietHourImportance");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(808),
                            Rank = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(809),
                            Rank = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PucharsedByUserId")
                        .HasColumnType("integer");

                    b.Property<int>("PurchasePrice")
                        .HasColumnType("integer");

                    b.Property<int?>("RequestedByUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("PucharsedByUserId");

                    b.HasIndex("RequestedByUserId");

                    b.ToTable("ShoppingList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(712),
                            HomeSpaceId = 1,
                            ItemName = "Milk",
                            PucharsedByUserId = 1,
                            PurchasePrice = 5,
                            RequestedByUserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Amount = 3,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(717),
                            HomeSpaceId = 1,
                            ItemName = "Bread",
                            PucharsedByUserId = 2,
                            PurchasePrice = 3,
                            RequestedByUserId = 1
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingListCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ShoppingListCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(763),
                            Name = "Dairy"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(765),
                            Name = "Bakery"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int?>("UserAppRoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserAppRoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(541),
                            PasswordHash = new byte[] { 0, 179, 79, 201, 204, 208, 160, 38, 151, 154, 238, 111, 205, 210, 114, 3, 195, 71, 155, 42, 106, 104, 215, 48, 76, 131, 236, 235, 169, 245, 3, 87, 145, 221, 219, 78, 242, 202, 19, 190, 174, 182, 238, 120, 100, 34, 165, 89, 12, 157, 100, 242, 119, 108, 123, 239, 173, 63, 201, 147, 241, 48, 4, 164 },
                            PasswordSalt = new byte[] { 144, 53, 114, 61, 82, 135, 47, 52, 119, 168, 41, 15, 157, 243, 244, 227, 238, 6, 156, 129, 156, 76, 253, 101, 68, 200, 119, 33, 149, 43, 45, 11, 177, 217, 219, 58, 174, 120, 58, 96, 228, 74, 58, 161, 33, 200, 143, 221, 3, 179, 5, 15, 223, 35, 243, 29, 3, 91, 150, 115, 111, 74, 111, 87, 193, 207, 240, 117, 200, 124, 164, 78, 240, 132, 43, 253, 80, 248, 236, 162, 195, 136, 199, 95, 209, 26, 120, 45, 185, 131, 234, 234, 16, 210, 89, 180, 137, 89, 34, 79, 151, 86, 114, 182, 68, 134, 211, 188, 94, 3, 137, 23, 150, 171, 239, 87, 47, 136, 136, 34, 71, 41, 73, 56, 187, 64, 163, 81 },
                            UserAppRoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(619),
                            PasswordHash = new byte[] { 132, 17, 89, 251, 178, 89, 153, 58, 131, 248, 30, 107, 72, 190, 150, 107, 149, 44, 136, 44, 49, 110, 201, 132, 169, 83, 154, 95, 146, 214, 143, 138, 18, 170, 252, 201, 10, 103, 163, 72, 137, 211, 207, 82, 16, 196, 222, 180, 110, 234, 162, 0, 23, 155, 7, 199, 48, 104, 145, 138, 62, 98, 235, 51 },
                            PasswordSalt = new byte[] { 116, 235, 186, 218, 225, 112, 78, 42, 165, 6, 43, 184, 134, 247, 88, 66, 134, 66, 89, 52, 92, 190, 101, 207, 200, 19, 82, 116, 122, 6, 185, 211, 17, 209, 172, 10, 32, 60, 127, 117, 123, 214, 144, 144, 86, 126, 19, 68, 128, 251, 229, 224, 114, 164, 11, 16, 62, 87, 160, 44, 132, 129, 227, 59, 107, 85, 40, 30, 245, 95, 35, 45, 6, 47, 171, 56, 117, 172, 238, 245, 97, 121, 248, 2, 172, 155, 88, 255, 132, 61, 181, 41, 84, 208, 184, 84, 60, 150, 159, 116, 83, 68, 182, 17, 153, 101, 227, 82, 205, 239, 81, 90, 60, 167, 29, 202, 113, 151, 30, 198, 59, 87, 70, 137, 210, 178, 34, 117 },
                            UserAppRoleId = 2,
                            Username = "user1"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(655),
                            PasswordHash = new byte[] { 181, 113, 246, 9, 216, 0, 70, 75, 194, 30, 37, 159, 70, 24, 187, 125, 79, 61, 53, 49, 247, 50, 221, 213, 145, 230, 21, 73, 206, 188, 161, 170, 155, 253, 102, 173, 125, 254, 219, 34, 72, 231, 147, 59, 189, 228, 55, 147, 125, 30, 160, 79, 126, 55, 78, 127, 47, 223, 93, 121, 67, 82, 6, 185 },
                            PasswordSalt = new byte[] { 55, 241, 135, 180, 28, 39, 119, 201, 79, 213, 76, 105, 46, 95, 112, 74, 189, 190, 40, 0, 237, 98, 170, 215, 54, 158, 56, 223, 113, 16, 107, 142, 40, 231, 212, 149, 222, 88, 42, 73, 84, 127, 125, 37, 185, 80, 54, 191, 236, 89, 87, 186, 208, 153, 9, 184, 1, 130, 6, 84, 212, 101, 179, 104, 201, 140, 180, 131, 44, 199, 25, 199, 83, 245, 96, 192, 111, 64, 50, 211, 143, 108, 6, 111, 143, 190, 15, 60, 177, 119, 76, 54, 158, 185, 223, 138, 241, 57, 161, 227, 187, 60, 188, 206, 157, 204, 200, 116, 246, 124, 87, 36, 85, 54, 71, 193, 135, 188, 7, 120, 235, 29, 52, 121, 207, 24, 14, 183 },
                            UserAppRoleId = 2,
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserAppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserAppRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(18),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(21),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("RewardPoints")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTask");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = false,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(828),
                            Description = "Finish the project by next week",
                            DueDate = new DateTime(2023, 9, 1, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(829),
                            HomeSpaceId = 1,
                            RewardPoints = 100,
                            Title = "Complete assignment",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Completed = true,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(831),
                            Description = "Get milk, eggs, and bread",
                            DueDate = new DateTime(2023, 8, 27, 21, 16, 58, 428, DateTimeKind.Utc).AddTicks(832),
                            HomeSpaceId = 1,
                            RewardPoints = 50,
                            Title = "Buy groceries",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.Guest", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("Guests")
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("Guests")
                        .HasForeignKey("InvitedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMember", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("HomeSpaceMembers")
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.HomeSpaceMemberRole", "HomeSpaceMemberRole")
                        .WithMany("HomeSpaceMembers")
                        .HasForeignKey("HomeSpaceMemberRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("HomeSpaceMembers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("HomeSpaceMemberRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpacePreference", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany()
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.Invitation", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany()
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "RecipientUser")
                        .WithMany("Invitations")
                        .HasForeignKey("RecipientUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "SenderUser")
                        .WithMany()
                        .HasForeignKey("SenderUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("RecipientUser");

                    b.Navigation("SenderUser");
                });

            modelBuilder.Entity("Flatie.Db.Entities.Notification", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("Notifications")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.NotificationType", "Type")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationTypeId");

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId");

                    b.Navigation("HomeSpace");

                    b.Navigation("Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHour", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("QuietHours")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.QuietHourImportance", "Importance")
                        .WithMany("QuietHours")
                        .HasForeignKey("QuietHourImportanceId");

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("QuietHours")
                        .HasForeignKey("UserId");

                    b.Navigation("HomeSpace");

                    b.Navigation("Importance");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingList", b =>
                {
                    b.HasOne("Flatie.Db.Entities.ShoppingListCategory", "Category")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.User", "PuchasedByUser")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("PucharsedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Flatie.Db.Entities.User", "RequestedByUser")
                        .WithMany()
                        .HasForeignKey("RequestedByUserId");

                    b.Navigation("Category");

                    b.Navigation("HomeSpace");

                    b.Navigation("PuchasedByUser");

                    b.Navigation("RequestedByUser");
                });

            modelBuilder.Entity("Flatie.Db.Entities.User", b =>
                {
                    b.HasOne("Flatie.Db.Entities.UserAppRole", "UserAppRole")
                        .WithMany("Users")
                        .HasForeignKey("UserAppRoleId");

                    b.Navigation("UserAppRole");
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserTask", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("UserTasks")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("UserTasks")
                        .HasForeignKey("UserId");

                    b.Navigation("HomeSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpace", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("HomeSpaceMembers");

                    b.Navigation("Notifications");

                    b.Navigation("QuietHours");

                    b.Navigation("ShoppingLists");

                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMemberRole", b =>
                {
                    b.Navigation("HomeSpaceMembers");
                });

            modelBuilder.Entity("Flatie.Db.Entities.NotificationType", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHourImportance", b =>
                {
                    b.Navigation("QuietHours");
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingListCategory", b =>
                {
                    b.Navigation("ShoppingLists");
                });

            modelBuilder.Entity("Flatie.Db.Entities.User", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("HomeSpaceMembers");

                    b.Navigation("Invitations");

                    b.Navigation("Notifications");

                    b.Navigation("QuietHours");

                    b.Navigation("ShoppingLists");

                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserAppRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
