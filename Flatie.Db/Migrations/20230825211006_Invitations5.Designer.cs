// <auto-generated />
using System;
using Flatie.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Flatie.Db.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230825211006_Invitations5")]
    partial class Invitations5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Flatie.Db.Entities.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("InvitedByUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("InvitedByUserId");

                    b.ToTable("Guest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(5012),
                            End = new DateTime(2023, 8, 28, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(5016),
                            HomeSpaceId = 1,
                            InvitedByUserId = 1,
                            Name = "Guest 1",
                            Start = new DateTime(2023, 8, 26, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(5014)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(5017),
                            End = new DateTime(2023, 8, 29, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(5018),
                            HomeSpaceId = 1,
                            InvitedByUserId = 2,
                            Name = "Guest 2",
                            Start = new DateTime(2023, 8, 27, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(5017)
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HomeSpace");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4816),
                            Name = "Living Room"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4818),
                            Name = "Kitchen"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4820),
                            Name = "Bedroom"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("HomeSpaceMemberRoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("HomeSpaceMemberRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("HomeSpaceMembers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4973),
                            HomeSpaceId = 1,
                            HomeSpaceMemberRoleId = 1,
                            JoinedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4974),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4976),
                            HomeSpaceId = 1,
                            HomeSpaceMemberRoleId = 2,
                            JoinedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4977),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4977),
                            HomeSpaceId = 2,
                            HomeSpaceMemberRoleId = 3,
                            JoinedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4978),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4978),
                            HomeSpaceId = 3,
                            HomeSpaceMemberRoleId = 3,
                            JoinedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4979),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMemberRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HomeSpaceMemberRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4958),
                            Role = "Owner"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4960),
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4961),
                            Role = "Member"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpacePreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("UserId");

                    b.ToTable("HomeSpacePreference");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4993),
                            Description = "Preference 1 description",
                            HomeSpaceId = 1,
                            Title = "Preference 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4996),
                            Description = "Preference 2 description",
                            HomeSpaceId = 1,
                            Title = "Preference 2",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("HomeSpaceMemberRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<int>("RecipientUserId")
                        .HasColumnType("integer");

                    b.Property<int>("SenderUserId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("RecipientUserId");

                    b.HasIndex("SenderUserId");

                    b.ToTable("Invitation");
                });

            modelBuilder.Entity("Flatie.Db.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NotificationTypeId")
                        .HasColumnType("integer");

                    b.Property<bool>("Read")
                        .HasColumnType("boolean");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4835),
                            HomeSpaceId = 1,
                            Message = "Notification 1",
                            NotificationTypeId = 1,
                            Read = false,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4838),
                            HomeSpaceId = 1,
                            Message = "Notification 2",
                            NotificationTypeId = 2,
                            Read = true,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NotificationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(5033),
                            TypeName = "Important"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(5034),
                            TypeName = "Regular"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int?>("QuietHourImportanceId")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("QuietHourImportanceId");

                    b.HasIndex("UserId");

                    b.ToTable("QuietHour");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4893),
                            End = new DateTime(2023, 8, 25, 23, 10, 6, 433, DateTimeKind.Utc).AddTicks(4894),
                            HomeSpaceId = 1,
                            QuietHourImportanceId = 1,
                            Reason = "Study time",
                            Start = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4894),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4902),
                            End = new DateTime(2023, 8, 27, 23, 10, 6, 433, DateTimeKind.Utc).AddTicks(4903),
                            HomeSpaceId = 1,
                            QuietHourImportanceId = 2,
                            Reason = "Quiet reading",
                            Start = new DateTime(2023, 8, 27, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4902),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHourImportance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("QuietHourImportance");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4918),
                            Rank = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4919),
                            Rank = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PucharsedByUserId")
                        .HasColumnType("integer");

                    b.Property<int>("PurchasePrice")
                        .HasColumnType("integer");

                    b.Property<int?>("RequestedByUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("PucharsedByUserId");

                    b.HasIndex("RequestedByUserId");

                    b.ToTable("ShoppingList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4857),
                            HomeSpaceId = 1,
                            ItemName = "Milk",
                            PucharsedByUserId = 1,
                            PurchasePrice = 5,
                            RequestedByUserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Amount = 3,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4861),
                            HomeSpaceId = 1,
                            ItemName = "Bread",
                            PucharsedByUserId = 2,
                            PurchasePrice = 3,
                            RequestedByUserId = 1
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingListCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ShoppingListCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4877),
                            Name = "Dairy"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4878),
                            Name = "Bakery"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int?>("UserAppRoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserAppRoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4700),
                            PasswordHash = new byte[] { 126, 228, 64, 128, 113, 10, 25, 210, 65, 27, 201, 188, 124, 227, 220, 100, 118, 91, 103, 169, 246, 172, 83, 146, 173, 62, 3, 137, 1, 161, 231, 26, 193, 117, 32, 150, 143, 133, 30, 245, 33, 176, 78, 1, 35, 238, 163, 86, 200, 11, 177, 212, 246, 142, 237, 84, 43, 67, 11, 37, 96, 106, 191, 90 },
                            PasswordSalt = new byte[] { 97, 56, 110, 228, 104, 208, 143, 222, 11, 117, 81, 221, 149, 207, 145, 166, 52, 219, 170, 162, 41, 233, 111, 192, 27, 98, 154, 159, 108, 2, 98, 74, 138, 2, 183, 228, 37, 166, 137, 17, 111, 75, 217, 214, 151, 129, 89, 220, 4, 97, 224, 112, 254, 123, 251, 55, 158, 118, 97, 71, 25, 10, 196, 249, 17, 124, 174, 67, 106, 104, 121, 86, 38, 114, 241, 5, 184, 158, 213, 146, 25, 6, 161, 221, 49, 97, 185, 223, 45, 83, 186, 218, 169, 174, 141, 165, 1, 92, 178, 197, 51, 7, 167, 148, 32, 197, 193, 159, 57, 101, 232, 51, 47, 165, 116, 78, 98, 2, 217, 175, 245, 130, 115, 35, 120, 135, 246, 35 },
                            UserAppRoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4744),
                            PasswordHash = new byte[] { 128, 196, 5, 199, 231, 253, 250, 168, 212, 253, 145, 171, 212, 14, 124, 58, 61, 118, 202, 24, 198, 83, 47, 158, 157, 20, 220, 104, 112, 136, 206, 249, 249, 83, 44, 117, 192, 197, 93, 192, 125, 48, 78, 208, 5, 122, 244, 32, 252, 209, 25, 198, 211, 162, 168, 189, 93, 156, 174, 161, 48, 228, 204, 101 },
                            PasswordSalt = new byte[] { 127, 199, 82, 157, 58, 135, 146, 188, 169, 100, 13, 118, 153, 199, 128, 1, 15, 92, 61, 1, 34, 252, 20, 129, 213, 202, 94, 13, 63, 83, 36, 169, 77, 231, 217, 240, 161, 12, 163, 4, 235, 189, 135, 153, 191, 232, 58, 227, 220, 117, 97, 150, 178, 246, 142, 19, 25, 129, 44, 196, 28, 154, 99, 96, 254, 132, 202, 236, 224, 29, 121, 242, 227, 210, 188, 161, 43, 16, 179, 50, 158, 194, 236, 135, 187, 2, 9, 158, 245, 219, 127, 231, 252, 164, 35, 70, 88, 163, 86, 20, 79, 176, 34, 132, 196, 180, 122, 103, 186, 189, 96, 214, 129, 224, 4, 162, 172, 74, 32, 185, 55, 154, 228, 185, 223, 211, 32, 170 },
                            UserAppRoleId = 2,
                            Username = "user1"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4777),
                            PasswordHash = new byte[] { 190, 28, 53, 250, 231, 89, 90, 193, 87, 91, 248, 79, 16, 27, 19, 51, 233, 181, 185, 90, 103, 134, 50, 108, 108, 222, 154, 8, 11, 169, 34, 3, 126, 6, 12, 128, 31, 169, 95, 167, 111, 200, 41, 53, 78, 95, 186, 151, 78, 85, 41, 195, 67, 105, 104, 240, 171, 35, 199, 250, 231, 224, 203, 146 },
                            PasswordSalt = new byte[] { 158, 0, 252, 154, 136, 254, 213, 30, 212, 90, 216, 202, 33, 245, 108, 143, 194, 164, 192, 113, 181, 157, 147, 22, 209, 44, 19, 17, 77, 11, 114, 58, 143, 99, 250, 18, 172, 73, 149, 213, 98, 125, 177, 160, 229, 34, 78, 135, 187, 161, 180, 77, 25, 132, 6, 208, 117, 90, 141, 166, 225, 91, 29, 129, 99, 56, 195, 153, 54, 161, 243, 165, 36, 104, 51, 95, 128, 46, 204, 216, 7, 68, 166, 31, 44, 77, 61, 15, 155, 82, 96, 177, 13, 133, 41, 232, 220, 95, 223, 150, 64, 143, 105, 119, 181, 4, 57, 243, 229, 201, 49, 4, 69, 210, 106, 243, 75, 32, 186, 203, 249, 194, 1, 198, 96, 23, 68, 235 },
                            UserAppRoleId = 2,
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserAppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserAppRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4270),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4274),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("RewardPoints")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTask");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = false,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4939),
                            Description = "Finish the project by next week",
                            DueDate = new DateTime(2023, 9, 1, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4940),
                            HomeSpaceId = 1,
                            RewardPoints = 100,
                            Title = "Complete assignment",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Completed = true,
                            CreatedAt = new DateTime(2023, 8, 25, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4941),
                            Description = "Get milk, eggs, and bread",
                            DueDate = new DateTime(2023, 8, 27, 21, 10, 6, 433, DateTimeKind.Utc).AddTicks(4942),
                            HomeSpaceId = 1,
                            RewardPoints = 50,
                            Title = "Buy groceries",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.Guest", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("Guests")
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("Guests")
                        .HasForeignKey("InvitedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMember", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("HomeSpaceMembers")
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.HomeSpaceMemberRole", "HomeSpaceMemberRole")
                        .WithMany("HomeSpaceMembers")
                        .HasForeignKey("HomeSpaceMemberRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("HomeSpaceMembers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("HomeSpaceMemberRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpacePreference", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany()
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.Invitation", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany()
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "RecipientUser")
                        .WithMany("Invitations")
                        .HasForeignKey("RecipientUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "SenderUser")
                        .WithMany()
                        .HasForeignKey("SenderUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("RecipientUser");

                    b.Navigation("SenderUser");
                });

            modelBuilder.Entity("Flatie.Db.Entities.Notification", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("Notifications")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.NotificationType", "Type")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationTypeId");

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId");

                    b.Navigation("HomeSpace");

                    b.Navigation("Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHour", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("QuietHours")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.QuietHourImportance", "Importance")
                        .WithMany("QuietHours")
                        .HasForeignKey("QuietHourImportanceId");

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("QuietHours")
                        .HasForeignKey("UserId");

                    b.Navigation("HomeSpace");

                    b.Navigation("Importance");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingList", b =>
                {
                    b.HasOne("Flatie.Db.Entities.ShoppingListCategory", "Category")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.User", "PuchasedByUser")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("PucharsedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Flatie.Db.Entities.User", "RequestedByUser")
                        .WithMany()
                        .HasForeignKey("RequestedByUserId");

                    b.Navigation("Category");

                    b.Navigation("HomeSpace");

                    b.Navigation("PuchasedByUser");

                    b.Navigation("RequestedByUser");
                });

            modelBuilder.Entity("Flatie.Db.Entities.User", b =>
                {
                    b.HasOne("Flatie.Db.Entities.UserAppRole", "UserAppRole")
                        .WithMany("Users")
                        .HasForeignKey("UserAppRoleId");

                    b.Navigation("UserAppRole");
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserTask", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("UserTasks")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("UserTasks")
                        .HasForeignKey("UserId");

                    b.Navigation("HomeSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpace", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("HomeSpaceMembers");

                    b.Navigation("Notifications");

                    b.Navigation("QuietHours");

                    b.Navigation("ShoppingLists");

                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMemberRole", b =>
                {
                    b.Navigation("HomeSpaceMembers");
                });

            modelBuilder.Entity("Flatie.Db.Entities.NotificationType", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHourImportance", b =>
                {
                    b.Navigation("QuietHours");
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingListCategory", b =>
                {
                    b.Navigation("ShoppingLists");
                });

            modelBuilder.Entity("Flatie.Db.Entities.User", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("HomeSpaceMembers");

                    b.Navigation("Invitations");

                    b.Navigation("Notifications");

                    b.Navigation("QuietHours");

                    b.Navigation("ShoppingLists");

                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserAppRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
