// <auto-generated />
using System;
using Flatie.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Flatie.Db.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230821171432_INITIAL2")]
    partial class INITIAL2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Flatie.Db.Entities.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("InvitedByUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("InvitedByUserId");

                    b.ToTable("Guest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8100),
                            End = new DateTime(2023, 8, 24, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8100),
                            HomeSpaceId = 1,
                            InvitedByUserId = 1,
                            Name = "Guest 1",
                            Start = new DateTime(2023, 8, 22, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8100)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8100),
                            End = new DateTime(2023, 8, 25, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8100),
                            HomeSpaceId = 1,
                            InvitedByUserId = 2,
                            Name = "Guest 2",
                            Start = new DateTime(2023, 8, 23, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8100)
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HomeSpace");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7820),
                            Name = "Living Room"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7820),
                            Name = "Kitchen"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7880),
                            Name = "Bedroom"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("HomeSpaceMemberRoleId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("HomeSpaceMemberRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("HomeSpaceMembers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8060),
                            HomeSpaceId = 1,
                            HomeSpaceMemberRoleId = 1,
                            JoinedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8060),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8060),
                            HomeSpaceId = 1,
                            HomeSpaceMemberRoleId = 2,
                            JoinedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8060),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8060),
                            HomeSpaceId = 2,
                            HomeSpaceMemberRoleId = 3,
                            JoinedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8060),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8060),
                            HomeSpaceId = 3,
                            HomeSpaceMemberRoleId = 3,
                            JoinedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8060),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMemberRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HomeSpaceMemberRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8040),
                            Role = "Owner"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8040),
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8040),
                            Role = "Member"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpacePreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("UserId");

                    b.ToTable("HomeSpacePreference");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8080),
                            Description = "Preference 1 description",
                            HomeSpaceId = 1,
                            Title = "Preference 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8080),
                            Description = "Preference 2 description",
                            HomeSpaceId = 1,
                            Title = "Preference 2",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("RecipientUserId")
                        .HasColumnType("integer");

                    b.Property<int>("SenderUserId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("RecipientUserId");

                    b.HasIndex("SenderUserId");

                    b.ToTable("Invitation");
                });

            modelBuilder.Entity("Flatie.Db.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NotificationTypeId")
                        .HasColumnType("integer");

                    b.Property<bool>("Read")
                        .HasColumnType("boolean");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7900),
                            HomeSpaceId = 1,
                            Message = "Notification 1",
                            NotificationTypeId = 1,
                            Read = false,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7900),
                            HomeSpaceId = 1,
                            Message = "Notification 2",
                            NotificationTypeId = 2,
                            Read = true,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NotificationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8130),
                            TypeName = "Important"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8130),
                            TypeName = "Regular"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int?>("QuietHourImportanceId")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("QuietHourImportanceId");

                    b.HasIndex("UserId");

                    b.ToTable("QuietHour");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7960),
                            End = new DateTime(2023, 8, 21, 19, 14, 32, 361, DateTimeKind.Utc).AddTicks(7960),
                            HomeSpaceId = 1,
                            QuietHourImportanceId = 1,
                            Reason = "Study time",
                            Start = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7960),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7970),
                            End = new DateTime(2023, 8, 23, 19, 14, 32, 361, DateTimeKind.Utc).AddTicks(7970),
                            HomeSpaceId = 1,
                            QuietHourImportanceId = 2,
                            Reason = "Quiet reading",
                            Start = new DateTime(2023, 8, 23, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7970),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHourImportance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("QuietHourImportance");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7990),
                            Rank = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7990),
                            Rank = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PucharsedByUserId")
                        .HasColumnType("integer");

                    b.Property<int>("PurchasePrice")
                        .HasColumnType("integer");

                    b.Property<int?>("RequestedByUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("PucharsedByUserId");

                    b.HasIndex("RequestedByUserId");

                    b.ToTable("ShoppingList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7920),
                            HomeSpaceId = 1,
                            ItemName = "Milk",
                            PucharsedByUserId = 1,
                            PurchasePrice = 5,
                            RequestedByUserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Amount = 3,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7930),
                            HomeSpaceId = 1,
                            ItemName = "Bread",
                            PucharsedByUserId = 2,
                            PurchasePrice = 3,
                            RequestedByUserId = 1
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingListCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ShoppingListCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7940),
                            Name = "Dairy"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7950),
                            Name = "Bakery"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int?>("UserAppRoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserAppRoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7640),
                            PasswordHash = new byte[] { 186, 54, 34, 68, 42, 148, 127, 102, 124, 111, 220, 34, 244, 179, 57, 168, 57, 151, 228, 59, 20, 199, 131, 183, 163, 40, 182, 21, 169, 170, 250, 7, 94, 28, 228, 228, 235, 248, 126, 225, 183, 184, 197, 127, 228, 120, 23, 215, 242, 181, 12, 221, 166, 63, 255, 110, 31, 60, 210, 220, 99, 34, 75, 198 },
                            PasswordSalt = new byte[] { 173, 152, 136, 47, 129, 122, 100, 214, 9, 112, 72, 124, 177, 229, 117, 155, 217, 92, 128, 4, 172, 159, 187, 97, 138, 211, 60, 162, 217, 90, 39, 118, 216, 95, 191, 82, 158, 87, 44, 156, 156, 80, 133, 23, 71, 65, 25, 123, 40, 12, 192, 173, 156, 240, 251, 141, 4, 145, 211, 82, 115, 131, 239, 105, 190, 249, 208, 254, 98, 98, 181, 130, 249, 155, 212, 137, 19, 173, 59, 174, 254, 15, 151, 219, 85, 142, 57, 76, 239, 62, 134, 12, 80, 217, 158, 209, 68, 78, 212, 220, 111, 255, 43, 19, 153, 121, 98, 149, 42, 31, 221, 74, 59, 46, 30, 184, 22, 192, 161, 189, 43, 243, 80, 80, 179, 36, 12, 226 },
                            UserAppRoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7740),
                            PasswordHash = new byte[] { 17, 111, 240, 28, 173, 44, 139, 166, 146, 195, 204, 99, 77, 215, 156, 24, 216, 190, 229, 156, 200, 140, 100, 216, 176, 227, 26, 117, 210, 88, 42, 255, 41, 215, 150, 108, 53, 175, 0, 85, 90, 113, 21, 70, 201, 145, 61, 72, 120, 165, 66, 166, 194, 224, 149, 148, 142, 32, 221, 196, 196, 106, 236, 94 },
                            PasswordSalt = new byte[] { 99, 141, 23, 93, 63, 51, 11, 73, 47, 247, 175, 34, 13, 138, 199, 113, 151, 43, 20, 149, 60, 142, 162, 138, 222, 92, 147, 26, 62, 24, 74, 151, 49, 236, 184, 90, 234, 72, 37, 100, 9, 179, 226, 159, 57, 212, 3, 100, 155, 180, 162, 56, 184, 32, 224, 143, 228, 230, 223, 139, 34, 137, 52, 168, 16, 218, 188, 10, 181, 17, 227, 225, 92, 51, 128, 67, 65, 77, 174, 242, 8, 186, 123, 161, 17, 86, 161, 178, 149, 84, 127, 118, 2, 13, 38, 154, 189, 230, 249, 130, 41, 142, 146, 200, 231, 4, 233, 62, 70, 136, 166, 67, 87, 75, 54, 102, 200, 72, 249, 34, 215, 36, 78, 228, 66, 148, 50, 189 },
                            UserAppRoleId = 2,
                            Username = "user1"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7800),
                            PasswordHash = new byte[] { 55, 49, 24, 60, 188, 24, 124, 65, 75, 238, 87, 41, 93, 62, 66, 4, 90, 208, 176, 218, 234, 78, 125, 152, 122, 237, 238, 60, 184, 243, 172, 184, 120, 200, 226, 45, 206, 10, 128, 194, 216, 75, 170, 166, 186, 56, 189, 12, 142, 26, 17, 202, 136, 175, 127, 34, 174, 240, 238, 13, 150, 124, 93, 158 },
                            PasswordSalt = new byte[] { 133, 75, 232, 79, 116, 121, 81, 163, 203, 145, 158, 142, 231, 110, 142, 3, 22, 244, 245, 46, 65, 227, 139, 115, 109, 139, 242, 150, 180, 108, 60, 192, 99, 156, 20, 52, 241, 122, 35, 74, 228, 65, 213, 70, 29, 143, 123, 141, 132, 52, 157, 141, 77, 194, 92, 94, 229, 137, 107, 125, 177, 26, 223, 12, 54, 196, 138, 19, 22, 245, 9, 71, 64, 236, 149, 160, 158, 204, 202, 16, 88, 14, 131, 117, 103, 83, 132, 204, 63, 111, 165, 30, 118, 191, 124, 138, 156, 195, 137, 96, 87, 134, 166, 139, 159, 170, 49, 26, 187, 141, 31, 128, 22, 217, 65, 219, 148, 194, 236, 99, 96, 178, 153, 59, 134, 26, 48, 16 },
                            UserAppRoleId = 2,
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserAppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserAppRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7120),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(7130),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("RewardPoints")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTask");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = false,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8010),
                            Description = "Finish the project by next week",
                            DueDate = new DateTime(2023, 8, 28, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8010),
                            HomeSpaceId = 1,
                            RewardPoints = 100,
                            Title = "Complete assignment",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Completed = true,
                            CreatedAt = new DateTime(2023, 8, 21, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8010),
                            Description = "Get milk, eggs, and bread",
                            DueDate = new DateTime(2023, 8, 23, 17, 14, 32, 361, DateTimeKind.Utc).AddTicks(8010),
                            HomeSpaceId = 1,
                            RewardPoints = 50,
                            Title = "Buy groceries",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.Guest", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("Guests")
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("Guests")
                        .HasForeignKey("InvitedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMember", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("HomeSpaceMembers")
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.HomeSpaceMemberRole", "HomeSpaceMemberRole")
                        .WithMany("HomeSpaceMembers")
                        .HasForeignKey("HomeSpaceMemberRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("HomeSpaceMembers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("HomeSpaceMemberRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpacePreference", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany()
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.Invitation", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany()
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "RecipientUser")
                        .WithMany("Invitations")
                        .HasForeignKey("RecipientUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "SenderUser")
                        .WithMany()
                        .HasForeignKey("SenderUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("RecipientUser");

                    b.Navigation("SenderUser");
                });

            modelBuilder.Entity("Flatie.Db.Entities.Notification", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("Notifications")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.NotificationType", "Type")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationTypeId");

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId");

                    b.Navigation("HomeSpace");

                    b.Navigation("Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHour", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("QuietHours")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.QuietHourImportance", "Importance")
                        .WithMany("QuietHours")
                        .HasForeignKey("QuietHourImportanceId");

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("QuietHours")
                        .HasForeignKey("UserId");

                    b.Navigation("HomeSpace");

                    b.Navigation("Importance");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingList", b =>
                {
                    b.HasOne("Flatie.Db.Entities.ShoppingListCategory", "Category")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.User", "PuchasedByUser")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("PucharsedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Flatie.Db.Entities.User", "RequestedByUser")
                        .WithMany()
                        .HasForeignKey("RequestedByUserId");

                    b.Navigation("Category");

                    b.Navigation("HomeSpace");

                    b.Navigation("PuchasedByUser");

                    b.Navigation("RequestedByUser");
                });

            modelBuilder.Entity("Flatie.Db.Entities.User", b =>
                {
                    b.HasOne("Flatie.Db.Entities.UserAppRole", "UserAppRole")
                        .WithMany("Users")
                        .HasForeignKey("UserAppRoleId");

                    b.Navigation("UserAppRole");
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserTask", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("UserTasks")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("UserTasks")
                        .HasForeignKey("UserId");

                    b.Navigation("HomeSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpace", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("HomeSpaceMembers");

                    b.Navigation("Notifications");

                    b.Navigation("QuietHours");

                    b.Navigation("ShoppingLists");

                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMemberRole", b =>
                {
                    b.Navigation("HomeSpaceMembers");
                });

            modelBuilder.Entity("Flatie.Db.Entities.NotificationType", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHourImportance", b =>
                {
                    b.Navigation("QuietHours");
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingListCategory", b =>
                {
                    b.Navigation("ShoppingLists");
                });

            modelBuilder.Entity("Flatie.Db.Entities.User", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("HomeSpaceMembers");

                    b.Navigation("Invitations");

                    b.Navigation("Notifications");

                    b.Navigation("QuietHours");

                    b.Navigation("ShoppingLists");

                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserAppRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
