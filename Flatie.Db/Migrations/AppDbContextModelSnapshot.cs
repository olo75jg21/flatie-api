// <auto-generated />
using System;
using Flatie.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Flatie.Db.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Flatie.Db.Entities.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("InvitedByUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("InvitedByUserId");

                    b.ToTable("Guest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8288),
                            End = new DateTime(2023, 7, 29, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8291),
                            HomeSpaceId = 1,
                            InvitedByUserId = 1,
                            Name = "Guest 1",
                            Start = new DateTime(2023, 7, 27, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8290)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8293),
                            End = new DateTime(2023, 7, 30, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8294),
                            HomeSpaceId = 1,
                            InvitedByUserId = 2,
                            Name = "Guest 2",
                            Start = new DateTime(2023, 7, 28, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8293)
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HomeSpace");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8092),
                            Name = "Living Room"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8094),
                            Name = "Kitchen"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8096),
                            Name = "Bedroom"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("UserId");

                    b.ToTable("HomeSpaceMembers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8245),
                            HomeSpaceId = 1,
                            JoinedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8246),
                            Role = "Owner",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8249),
                            HomeSpaceId = 1,
                            JoinedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8249),
                            Role = "Member",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8250),
                            HomeSpaceId = 2,
                            JoinedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8250),
                            Role = "Member",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8251),
                            HomeSpaceId = 3,
                            JoinedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8252),
                            Role = "Member",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpacePreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("UserId");

                    b.ToTable("HomeSpacePreference");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8269),
                            Description = "Preference 1 description",
                            HomeSpaceId = 1,
                            Title = "Preference 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8273),
                            Description = "Preference 2 description",
                            HomeSpaceId = 1,
                            Title = "Preference 2",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NotificationTypeId")
                        .HasColumnType("integer");

                    b.Property<bool>("Read")
                        .HasColumnType("boolean");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8135),
                            HomeSpaceId = 1,
                            Message = "Notification 1",
                            NotificationTypeId = 1,
                            Read = false,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8138),
                            HomeSpaceId = 1,
                            Message = "Notification 2",
                            NotificationTypeId = 2,
                            Read = true,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NotificationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8310),
                            TypeName = "Important"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8311),
                            TypeName = "Regular"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int?>("QuietHourImportanceId")
                        .HasColumnType("integer");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("QuietHourImportanceId");

                    b.HasIndex("UserId");

                    b.ToTable("QuietHour");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8186),
                            End = new DateTime(2023, 7, 26, 20, 52, 55, 951, DateTimeKind.Utc).AddTicks(8189),
                            HomeSpaceId = 1,
                            QuietHourImportanceId = 1,
                            Reason = "Study time",
                            Start = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8188),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8196),
                            End = new DateTime(2023, 7, 28, 20, 52, 55, 951, DateTimeKind.Utc).AddTicks(8198),
                            HomeSpaceId = 1,
                            QuietHourImportanceId = 2,
                            Reason = "Quiet reading",
                            Start = new DateTime(2023, 7, 28, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8197),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHourImportance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("QuietHourImportance");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8213),
                            Rank = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8214),
                            Rank = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PucharsedByUserId")
                        .HasColumnType("integer");

                    b.Property<int>("PurchasePrice")
                        .HasColumnType("integer");

                    b.Property<int?>("RequestedByUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("PucharsedByUserId");

                    b.HasIndex("RequestedByUserId");

                    b.ToTable("ShoppingList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8151),
                            HomeSpaceId = 1,
                            ItemName = "Milk",
                            PucharsedByUserId = 1,
                            PurchasePrice = 5,
                            RequestedByUserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Amount = 3,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8155),
                            HomeSpaceId = 1,
                            ItemName = "Bread",
                            PucharsedByUserId = 2,
                            PurchasePrice = 3,
                            RequestedByUserId = 1
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingListCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ShoppingListCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8170),
                            Name = "Dairy"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8172),
                            Name = "Bakery"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserAppRoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserAppRoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8069),
                            Password = "adminpassword",
                            UserAppRoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8072),
                            Password = "user1password",
                            UserAppRoleId = 2,
                            Username = "user1"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8073),
                            Password = "user2password",
                            UserAppRoleId = 2,
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserAppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserAppRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(7972),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(7975),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HomeSpaceId")
                        .HasColumnType("integer");

                    b.Property<int>("RewardPoints")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HomeSpaceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTask");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = false,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8227),
                            Description = "Finish the project by next week",
                            DueDate = new DateTime(2023, 8, 2, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8228),
                            HomeSpaceId = 1,
                            RewardPoints = 100,
                            Title = "Complete assignment",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Completed = true,
                            CreatedAt = new DateTime(2023, 7, 26, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8229),
                            Description = "Get milk, eggs, and bread",
                            DueDate = new DateTime(2023, 7, 28, 18, 52, 55, 951, DateTimeKind.Utc).AddTicks(8230),
                            HomeSpaceId = 1,
                            RewardPoints = 50,
                            Title = "Buy groceries",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Flatie.Db.Entities.Guest", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("Guests")
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("Guests")
                        .HasForeignKey("InvitedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpaceMember", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("HomeSpaceMembers")
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("HomeSpaceMembers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpacePreference", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany()
                        .HasForeignKey("HomeSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.Notification", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("Notifications")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.NotificationType", "Type")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationTypeId");

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId");

                    b.Navigation("HomeSpace");

                    b.Navigation("Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHour", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("QuietHours")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.QuietHourImportance", "Importance")
                        .WithMany("QuietHours")
                        .HasForeignKey("QuietHourImportanceId");

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("QuietHours")
                        .HasForeignKey("UserId");

                    b.Navigation("HomeSpace");

                    b.Navigation("Importance");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingList", b =>
                {
                    b.HasOne("Flatie.Db.Entities.ShoppingListCategory", "Category")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.User", "PuchasedByUser")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("PucharsedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Flatie.Db.Entities.User", "RequestedByUser")
                        .WithMany()
                        .HasForeignKey("RequestedByUserId");

                    b.Navigation("Category");

                    b.Navigation("HomeSpace");

                    b.Navigation("PuchasedByUser");

                    b.Navigation("RequestedByUser");
                });

            modelBuilder.Entity("Flatie.Db.Entities.User", b =>
                {
                    b.HasOne("Flatie.Db.Entities.UserAppRole", "UserAppRole")
                        .WithMany("Users")
                        .HasForeignKey("UserAppRoleId");

                    b.Navigation("UserAppRole");
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserTask", b =>
                {
                    b.HasOne("Flatie.Db.Entities.HomeSpace", "HomeSpace")
                        .WithMany("UserTasks")
                        .HasForeignKey("HomeSpaceId");

                    b.HasOne("Flatie.Db.Entities.User", "User")
                        .WithMany("UserTasks")
                        .HasForeignKey("UserId");

                    b.Navigation("HomeSpace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Flatie.Db.Entities.HomeSpace", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("HomeSpaceMembers");

                    b.Navigation("Notifications");

                    b.Navigation("QuietHours");

                    b.Navigation("ShoppingLists");

                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("Flatie.Db.Entities.NotificationType", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Flatie.Db.Entities.QuietHourImportance", b =>
                {
                    b.Navigation("QuietHours");
                });

            modelBuilder.Entity("Flatie.Db.Entities.ShoppingListCategory", b =>
                {
                    b.Navigation("ShoppingLists");
                });

            modelBuilder.Entity("Flatie.Db.Entities.User", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("HomeSpaceMembers");

                    b.Navigation("Notifications");

                    b.Navigation("QuietHours");

                    b.Navigation("ShoppingLists");

                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("Flatie.Db.Entities.UserAppRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
